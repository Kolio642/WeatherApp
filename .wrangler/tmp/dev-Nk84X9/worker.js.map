{
  "version": 3,
  "sources": ["../bundle-x9QYb2/checked-fetch.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../../../node_modules/wrangler/templates/middleware/loader-sw.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-x9QYb2/middleware-insertion-facade.js", "../../../dist/worker.js"],
  "sourceRoot": "D:\\Sites\\Weather_Site\\.wrangler\\tmp\\dev-Nk84X9",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "import {\n\t__facade_invoke__,\n\t__facade_register__,\n\t__facade_registerInternal__,\n\tAwaitable,\n\tDispatcher,\n\tIncomingRequest,\n\tMiddleware,\n} from \"./common\";\n\nexport { __facade_register__, __facade_registerInternal__ };\n\n// Miniflare 2's `EventTarget` follows the spec and doesn't allow exceptions to\n// be caught by `dispatchEvent`. Instead it has a custom `ThrowingEventTarget`\n// class that rethrows errors from event listeners in `dispatchEvent`.\n// We'd like errors to be propagated to the top-level `addEventListener`, so\n// we'd like to use `ThrowingEventTarget`. Unfortunately, `ThrowingEventTarget`\n// isn't exposed on the global scope, but `WorkerGlobalScope` (which extends\n// `ThrowingEventTarget`) is. Therefore, we get at it in this nasty way.\nlet __FACADE_EVENT_TARGET__: EventTarget;\nif ((globalThis as any).MINIFLARE) {\n\t__FACADE_EVENT_TARGET__ = new (Object.getPrototypeOf(WorkerGlobalScope))();\n} else {\n\t__FACADE_EVENT_TARGET__ = new EventTarget();\n}\n\nfunction __facade_isSpecialEvent__(\n\ttype: string\n): type is \"fetch\" | \"scheduled\" {\n\treturn type === \"fetch\" || type === \"scheduled\";\n}\nconst __facade__originalAddEventListener__ = globalThis.addEventListener;\nconst __facade__originalRemoveEventListener__ = globalThis.removeEventListener;\nconst __facade__originalDispatchEvent__ = globalThis.dispatchEvent;\n\nglobalThis.addEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.addEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalAddEventListener__(type, listener, options);\n\t}\n};\nglobalThis.removeEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.removeEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalRemoveEventListener__(type, listener, options);\n\t}\n};\nglobalThis.dispatchEvent = function (event) {\n\tif (__facade_isSpecialEvent__(event.type)) {\n\t\treturn __FACADE_EVENT_TARGET__.dispatchEvent(event);\n\t} else {\n\t\treturn __facade__originalDispatchEvent__(event);\n\t}\n};\n\ndeclare global {\n\tvar addMiddleware: typeof __facade_register__;\n\tvar addMiddlewareInternal: typeof __facade_registerInternal__;\n}\nglobalThis.addMiddleware = __facade_register__;\nglobalThis.addMiddlewareInternal = __facade_registerInternal__;\n\nconst __facade_waitUntil__ = Symbol(\"__facade_waitUntil__\");\nconst __facade_response__ = Symbol(\"__facade_response__\");\nconst __facade_dispatched__ = Symbol(\"__facade_dispatched__\");\n\nclass __Facade_ExtendableEvent__ extends Event {\n\t[__facade_waitUntil__]: Awaitable<unknown>[] = [];\n\n\twaitUntil(promise: Awaitable<any>) {\n\t\tif (!(this instanceof __Facade_ExtendableEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tthis[__facade_waitUntil__].push(promise);\n\t}\n}\n\ninterface FetchEventInit extends EventInit {\n\trequest: Request;\n\tpassThroughOnException: FetchEvent[\"passThroughOnException\"];\n}\n\nclass __Facade_FetchEvent__ extends __Facade_ExtendableEvent__ {\n\t#request: Request;\n\t#passThroughOnException: FetchEvent[\"passThroughOnException\"];\n\t[__facade_response__]?: Awaitable<Response>;\n\t[__facade_dispatched__] = false;\n\n\tconstructor(type: \"fetch\", init: FetchEventInit) {\n\t\tsuper(type);\n\t\tthis.#request = init.request;\n\t\tthis.#passThroughOnException = init.passThroughOnException;\n\t}\n\n\tget request() {\n\t\treturn this.#request;\n\t}\n\n\trespondWith(response: Awaitable<Response>) {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tif (this[__facade_response__] !== undefined) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"FetchEvent.respondWith() has already been called; it can only be called once.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tif (this[__facade_dispatched__]) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"Too late to call FetchEvent.respondWith(). It must be called synchronously in the event handler.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tthis.stopImmediatePropagation();\n\t\tthis[__facade_response__] = response;\n\t}\n\n\tpassThroughOnException() {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#passThroughOnException();\n\t}\n}\n\ninterface ScheduledEventInit extends EventInit {\n\tscheduledTime: number;\n\tcron: string;\n\tnoRetry: ScheduledEvent[\"noRetry\"];\n}\n\nclass __Facade_ScheduledEvent__ extends __Facade_ExtendableEvent__ {\n\t#scheduledTime: number;\n\t#cron: string;\n\t#noRetry: ScheduledEvent[\"noRetry\"];\n\n\tconstructor(type: \"scheduled\", init: ScheduledEventInit) {\n\t\tsuper(type);\n\t\tthis.#scheduledTime = init.scheduledTime;\n\t\tthis.#cron = init.cron;\n\t\tthis.#noRetry = init.noRetry;\n\t}\n\n\tget scheduledTime() {\n\t\treturn this.#scheduledTime;\n\t}\n\n\tget cron() {\n\t\treturn this.#cron;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\n__facade__originalAddEventListener__(\"fetch\", (event) => {\n\tconst ctx: ExecutionContext = {\n\t\twaitUntil: event.waitUntil.bind(event),\n\t\tpassThroughOnException: event.passThroughOnException.bind(event),\n\t};\n\n\tconst __facade_sw_dispatch__: Dispatcher = function (type, init) {\n\t\tif (type === \"scheduled\") {\n\t\t\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\t\t\tscheduledTime: Date.now(),\n\t\t\t\tcron: init.cron ?? \"\",\n\t\t\t\tnoRetry() {},\n\t\t\t});\n\n\t\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\t\t}\n\t};\n\n\tconst __facade_sw_fetch__: Middleware = function (request, _env, ctx) {\n\t\tconst facadeEvent = new __Facade_FetchEvent__(\"fetch\", {\n\t\t\trequest,\n\t\t\tpassThroughOnException: ctx.passThroughOnException,\n\t\t});\n\n\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\tfacadeEvent[__facade_dispatched__] = true;\n\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\n\t\tconst response = facadeEvent[__facade_response__];\n\t\tif (response === undefined) {\n\t\t\tthrow new Error(\"No response!\"); // TODO: proper error message\n\t\t}\n\t\treturn response;\n\t};\n\n\tevent.respondWith(\n\t\t__facade_invoke__(\n\t\t\tevent.request as IncomingRequest,\n\t\t\tglobalThis,\n\t\t\tctx,\n\t\t\t__facade_sw_dispatch__,\n\t\t\t__facade_sw_fetch__\n\t\t)\n\t);\n});\n\n__facade__originalAddEventListener__(\"scheduled\", (event) => {\n\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\tscheduledTime: event.scheduledTime,\n\t\tcron: event.cron,\n\t\tnoRetry: event.noRetry.bind(event),\n\t});\n\n\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n});\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport { __facade_registerInternal__ } from \"D:\\\\Sites\\\\Weather_Site\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\loader-sw.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"D:\\\\Sites\\\\Weather_Site\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"D:\\\\Sites\\\\Weather_Site\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\t\t\t\t__facade_registerInternal__([__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default])", "/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n\n;// ./src/utils/fetch.js\n/**\r\n * Helper function to fetch from the Weather API\r\n * @param {string} apiUrl - The API URL to fetch from\r\n * @returns {Response} - The response from the API\r\n */\r\nasync function fetchFromApi(apiUrl) {\r\n  try {\r\n    const response = await fetch(apiUrl);\r\n    const data = await response.json();\r\n    \r\n    // Pass through the response from the Weather API\r\n    return new Response(JSON.stringify(data), {\r\n      status: response.status,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Cache-Control': 'max-age=1800', // Cache for 30 minutes\r\n        'Access-Control-Allow-Origin': '*'\r\n      }\r\n    });\r\n  } catch (error) {\r\n    return new Response(JSON.stringify({ error: 'Error fetching from Weather API' }), {\r\n      status: 500,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n} \n;// ./src/handlers/api.js\n// API request handlers\r\n\r\n\r\n// Base WeatherAPI URL\r\nconst BASE_URL = 'https://api.weatherapi.com/v1';\r\n\r\n/**\r\n * Handle API requests by proxying to the Weather API\r\n * @param {FetchEvent} event - The fetch event\r\n * @param {string} apiKey - The Weather API key\r\n * @returns {Response} - The API response\r\n */\r\nasync function handleApiRequest(event, apiKey) {\r\n  const url = new URL(event.request.url);\r\n  const path = url.pathname;\r\n  const queryParams = url.searchParams;\r\n  \r\n  // Handle different API endpoints\r\n  if (path === '/api/weather') {\r\n    return await handleWeatherRequest(queryParams, apiKey);\r\n  }\r\n  \r\n  if (path === '/api/forecast') {\r\n    return await handleForecastRequest(queryParams, apiKey);\r\n  }\r\n  \r\n  if (path === '/api/cities') {\r\n    return await handleCitiesRequest(queryParams, apiKey);\r\n  }\r\n  \r\n  // Handle unknown API endpoints\r\n  return new Response(JSON.stringify({ error: 'API endpoint not found' }), {\r\n    status: 404,\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n}\r\n\r\n/**\r\n * Handle current weather requests\r\n * @param {URLSearchParams} queryParams - The query parameters\r\n * @param {string} apiKey - The Weather API key\r\n * @returns {Response} - The API response\r\n */\r\nasync function handleWeatherRequest(queryParams, apiKey) {\r\n  const city = queryParams.get('city');\r\n  const lat = queryParams.get('lat');\r\n  const lon = queryParams.get('lon');\r\n  \r\n  let apiUrl;\r\n  if (city) {\r\n    apiUrl = `${BASE_URL}/current.json?key=${apiKey}&q=${encodeURIComponent(city)}&aqi=yes`;\r\n  } else if (lat && lon) {\r\n    apiUrl = `${BASE_URL}/current.json?key=${apiKey}&q=${lat},${lon}&aqi=yes`;\r\n  } else {\r\n    return new Response(JSON.stringify({ error: 'City name or coordinates are required' }), {\r\n      status: 400,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n  \r\n  return await fetchFromApi(apiUrl);\r\n}\r\n\r\n/**\r\n * Handle weather forecast requests\r\n * @param {URLSearchParams} queryParams - The query parameters\r\n * @param {string} apiKey - The Weather API key\r\n * @returns {Response} - The API response\r\n */\r\nasync function handleForecastRequest(queryParams, apiKey) {\r\n  const city = queryParams.get('city');\r\n  const lat = queryParams.get('lat');\r\n  const lon = queryParams.get('lon');\r\n  const days = queryParams.get('days') || 5;\r\n  \r\n  let apiUrl;\r\n  if (city) {\r\n    apiUrl = `${BASE_URL}/forecast.json?key=${apiKey}&q=${encodeURIComponent(city)}&days=${days}&aqi=no&alerts=no`;\r\n  } else if (lat && lon) {\r\n    apiUrl = `${BASE_URL}/forecast.json?key=${apiKey}&q=${lat},${lon}&days=${days}&aqi=no&alerts=no`;\r\n  } else {\r\n    return new Response(JSON.stringify({ error: 'City name or coordinates are required' }), {\r\n      status: 400,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n  \r\n  return await fetchFromApi(apiUrl);\r\n}\r\n\r\n/**\r\n * Handle city search requests\r\n * @param {URLSearchParams} queryParams - The query parameters\r\n * @param {string} apiKey - The Weather API key\r\n * @returns {Response} - The API response\r\n */\r\nasync function handleCitiesRequest(queryParams, apiKey) {\r\n  const q = queryParams.get('q');\r\n  \r\n  if (!q || q.length < 3) {\r\n    return new Response(JSON.stringify([]), {\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n  \r\n  const apiUrl = `${BASE_URL}/search.json?key=${apiKey}&q=${encodeURIComponent(q)}`;\r\n  return await fetchFromApi(apiUrl);\r\n} \n;// ./src/handlers/assets.js\n/**\r\n * Modified static asset handler that doesn't rely on KV namespace\r\n * Instead, uses standard fetch against __STATIC_CONTENT\r\n * @param {FetchEvent} event - The fetch event\r\n * @returns {Response} - The response with the static asset\r\n */\r\nasync function serveStaticAsset(event) {\r\n  const url = new URL(event.request.url);\r\n  let path = url.pathname;\r\n  \r\n  // Adjust path for the default route\r\n  if (path === '/' || path === '') {\r\n    path = '/index.html';\r\n  }\r\n  \r\n  try {\r\n    // Try to fetch the asset directly from the worker's built-in asset storage\r\n    const response = await fetch(new Request(url.origin + path, {\r\n      headers: event.request.headers,\r\n      method: 'GET'\r\n    }));\r\n    \r\n    if (response.status === 404) {\r\n      return new Response(`Not Found: ${path}`, { \r\n        status: 404,\r\n        headers: { 'Content-Type': 'text/plain' }\r\n      });\r\n    }\r\n    \r\n    // Add appropriate caching headers\r\n    const headers = new Headers(response.headers);\r\n    headers.set('Cache-Control', 'public, max-age=3600');\r\n    \r\n    return new Response(response.body, {\r\n      status: response.status,\r\n      statusText: response.statusText,\r\n      headers\r\n    });\r\n  } catch (e) {\r\n    // If there was an error, return a 500\r\n    return new Response(`Error serving ${path}: ${e.message}`, { \r\n      status: 500,\r\n      headers: { 'Content-Type': 'text/plain' }\r\n    });\r\n  }\r\n} \n;// ./src/index.js\n// Main worker entry point\r\n\r\n\r\n\r\n// Get API key from environment variables\r\nconst WEATHER_API_KEY = typeof self.WEATHER_API_KEY !== 'undefined' ? self.WEATHER_API_KEY : '';\r\n\r\n// Define event listener\r\naddEventListener('fetch', event => {\r\n  event.respondWith(handleEvent(event));\r\n});\r\n\r\n// Handle requests\r\nasync function handleEvent(event) {\r\n  const url = new URL(event.request.url);\r\n  const path = url.pathname;\r\n  \r\n  try {\r\n    // Handle API requests\r\n    if (path.startsWith('/api/')) {\r\n      return await handleApiRequest(event, WEATHER_API_KEY);\r\n    }\r\n\r\n    // Serve static files\r\n    return await serveStaticAsset(event);\r\n  } catch (e) {\r\n    return new Response('Internal Error: ' + e.message, { \r\n      status: 500,\r\n      headers: { 'Content-Type': 'text/plain' }\r\n    });\r\n  }\r\n}\r\n\r\n// Simple test Worker\r\naddEventListener('fetch', event => {\r\n  event.respondWith(handleRequest(event.request));\r\n});\r\n\r\nasync function handleRequest(request) {\r\n  return new Response('Hello World! The Worker is running correctly.', {\r\n    headers: { 'Content-Type': 'text/plain' }\r\n  });\r\n} \n/******/ })()\n;"],
  "mappings": "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",
  "names": ["ctx"]
}
